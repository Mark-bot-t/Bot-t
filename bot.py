import asyncio
import json
import subprocess
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (Railway Variables)
TOKEN = os.getenv("TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –õ–∏–Ω–∫–æ—Ä–µ–∑ ‚Äî –ø—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –ø–ª–µ–π–ª–∏—Å—Ç, –∏ —è –Ω–∞—Ä–µ–∂—É –µ–≥–æ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ.")

@dp.message()
async def handle_playlist(message: types.Message):
    playlist_url = message.text.strip()
    if "youtube.com/playlist" not in playlist_url:
        await message.answer("‚ùå –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç YouTube.")
        return

    await message.answer("üîç –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ...")

    try:
        result = subprocess.run(
            ["yt-dlp", "--flat-playlist", "--dump-json", playlist_url],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )

        video_count = 0
        for line in result.stdout.splitlines():
            data = json.loads(line)
            if "id" in data:
                video_url = f"https://www.youtube.com/watch?v={data['id']}"
                await message.answer(video_url)
                await message.answer("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî")
                video_count += 1

        if video_count == 0:
            await message.answer("‚ùå –í–∏–¥–µ–æ –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {e}")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
